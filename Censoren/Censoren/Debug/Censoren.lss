
Censoren.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000740  000007d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000740  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800100  00800100  000007d4  2**0
                  ALLOC
  3 .stab         00002100  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000646  00000000  00000000  000028d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00002f20  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006c1  00000000  00000000  00002fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000295  00000000  00000000  00003681  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000414  00000000  00000000  00003916  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00003d2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000245  00000000  00000000  00003e90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000315  00000000  00000000  000040d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 32       	cpi	r26, 0x28	; 40
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 95 01 	call	0x32a	; 0x32a <main>
  9e:	0c 94 9e 03 	jmp	0x73c	; 0x73c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SCH_Add_Task>:
  a6:	0f 93       	push	r16
  a8:	1f 93       	push	r17
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	8c 01       	movw	r16, r24
  b0:	eb 01       	movw	r28, r22
  b2:	da 01       	movw	r26, r20
  b4:	80 91 05 01 	lds	r24, 0x0105
  b8:	90 91 06 01 	lds	r25, 0x0106
  bc:	00 97       	sbiw	r24, 0x00	; 0
  be:	b1 f0       	breq	.+44     	; 0xec <SCH_Add_Task+0x46>
  c0:	ec e0       	ldi	r30, 0x0C	; 12
  c2:	f1 e0       	ldi	r31, 0x01	; 1
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	42 2f       	mov	r20, r18
  ca:	b9 01       	movw	r22, r18
  cc:	80 81       	ld	r24, Z
  ce:	91 81       	ldd	r25, Z+1	; 0x01
  d0:	00 97       	sbiw	r24, 0x00	; 0
  d2:	41 f0       	breq	.+16     	; 0xe4 <SCH_Add_Task+0x3e>
  d4:	2f 5f       	subi	r18, 0xFF	; 255
  d6:	3f 4f       	sbci	r19, 0xFF	; 255
  d8:	37 96       	adiw	r30, 0x07	; 7
  da:	26 30       	cpi	r18, 0x06	; 6
  dc:	31 05       	cpc	r19, r1
  de:	a1 f7       	brne	.-24     	; 0xc8 <SCH_Add_Task+0x22>
  e0:	84 2f       	mov	r24, r20
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <SCH_Add_Task+0x40>
  e4:	82 2f       	mov	r24, r18
  e6:	85 30       	cpi	r24, 0x05	; 5
  e8:	21 f4       	brne	.+8      	; 0xf2 <SCH_Add_Task+0x4c>
  ea:	17 c0       	rjmp	.+46     	; 0x11a <SCH_Add_Task+0x74>
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	cb 01       	movw	r24, r22
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	88 0f       	add	r24, r24
  fa:	99 1f       	adc	r25, r25
  fc:	88 0f       	add	r24, r24
  fe:	99 1f       	adc	r25, r25
 100:	86 1b       	sub	r24, r22
 102:	97 0b       	sbc	r25, r23
 104:	fc 01       	movw	r30, r24
 106:	eb 5f       	subi	r30, 0xFB	; 251
 108:	fe 4f       	sbci	r31, 0xFE	; 254
 10a:	11 83       	std	Z+1, r17	; 0x01
 10c:	00 83       	st	Z, r16
 10e:	d3 83       	std	Z+3, r29	; 0x03
 110:	c2 83       	std	Z+2, r28	; 0x02
 112:	b5 83       	std	Z+5, r27	; 0x05
 114:	a4 83       	std	Z+4, r26	; 0x04
 116:	16 82       	std	Z+6, r1	; 0x06
 118:	84 2f       	mov	r24, r20
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	1f 91       	pop	r17
 120:	0f 91       	pop	r16
 122:	08 95       	ret

00000124 <SCH_Delete_Task>:
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	fc 01       	movw	r30, r24
 128:	ee 0f       	add	r30, r30
 12a:	ff 1f       	adc	r31, r31
 12c:	ee 0f       	add	r30, r30
 12e:	ff 1f       	adc	r31, r31
 130:	ee 0f       	add	r30, r30
 132:	ff 1f       	adc	r31, r31
 134:	e8 1b       	sub	r30, r24
 136:	f9 0b       	sbc	r31, r25
 138:	eb 5f       	subi	r30, 0xFB	; 251
 13a:	fe 4f       	sbci	r31, 0xFE	; 254
 13c:	11 82       	std	Z+1, r1	; 0x01
 13e:	10 82       	st	Z, r1
 140:	13 82       	std	Z+3, r1	; 0x03
 142:	12 82       	std	Z+2, r1	; 0x02
 144:	15 82       	std	Z+5, r1	; 0x05
 146:	14 82       	std	Z+4, r1	; 0x04
 148:	16 82       	std	Z+6, r1	; 0x06
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	08 95       	ret

0000014e <SCH_Dispatch_Tasks>:
 14e:	cf 92       	push	r12
 150:	df 92       	push	r13
 152:	ef 92       	push	r14
 154:	ff 92       	push	r15
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cb e0       	ldi	r28, 0x0B	; 11
 15e:	d1 e0       	ldi	r29, 0x01	; 1
 160:	0f 2e       	mov	r0, r31
 162:	fa ef       	ldi	r31, 0xFA	; 250
 164:	ef 2e       	mov	r14, r31
 166:	ff ef       	ldi	r31, 0xFF	; 255
 168:	ff 2e       	mov	r15, r31
 16a:	f0 2d       	mov	r31, r0
 16c:	ec 0e       	add	r14, r28
 16e:	fd 1e       	adc	r15, r29
 170:	10 e0       	ldi	r17, 0x00	; 0
 172:	88 81       	ld	r24, Y
 174:	88 23       	and	r24, r24
 176:	91 f0       	breq	.+36     	; 0x19c <SCH_Dispatch_Tasks+0x4e>
 178:	d7 01       	movw	r26, r14
 17a:	ed 91       	ld	r30, X+
 17c:	fc 91       	ld	r31, X
 17e:	11 97       	sbiw	r26, 0x01	; 1
 180:	30 97       	sbiw	r30, 0x00	; 0
 182:	61 f0       	breq	.+24     	; 0x19c <SCH_Dispatch_Tasks+0x4e>
 184:	09 95       	icall
 186:	88 81       	ld	r24, Y
 188:	81 50       	subi	r24, 0x01	; 1
 18a:	88 83       	st	Y, r24
 18c:	f7 01       	movw	r30, r14
 18e:	84 81       	ldd	r24, Z+4	; 0x04
 190:	95 81       	ldd	r25, Z+5	; 0x05
 192:	00 97       	sbiw	r24, 0x00	; 0
 194:	19 f4       	brne	.+6      	; 0x19c <SCH_Dispatch_Tasks+0x4e>
 196:	81 2f       	mov	r24, r17
 198:	0e 94 92 00 	call	0x124	; 0x124 <SCH_Delete_Task>
 19c:	1f 5f       	subi	r17, 0xFF	; 255
 19e:	27 96       	adiw	r28, 0x07	; 7
 1a0:	87 e0       	ldi	r24, 0x07	; 7
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	e8 0e       	add	r14, r24
 1a6:	f9 1e       	adc	r15, r25
 1a8:	15 30       	cpi	r17, 0x05	; 5
 1aa:	19 f7       	brne	.-58     	; 0x172 <SCH_Dispatch_Tasks+0x24>
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	ff 90       	pop	r15
 1b4:	ef 90       	pop	r14
 1b6:	df 90       	pop	r13
 1b8:	cf 90       	pop	r12
 1ba:	08 95       	ret

000001bc <SCH_Init_T1>:
 1bc:	cf 93       	push	r28
 1be:	c0 e0       	ldi	r28, 0x00	; 0
 1c0:	8c 2f       	mov	r24, r28
 1c2:	0e 94 92 00 	call	0x124	; 0x124 <SCH_Delete_Task>
 1c6:	cf 5f       	subi	r28, 0xFF	; 255
 1c8:	c5 30       	cpi	r28, 0x05	; 5
 1ca:	d1 f7       	brne	.-12     	; 0x1c0 <SCH_Init_T1+0x4>
 1cc:	81 e7       	ldi	r24, 0x71	; 113
 1ce:	92 e0       	ldi	r25, 0x02	; 2
 1d0:	90 93 89 00 	sts	0x0089, r25
 1d4:	80 93 88 00 	sts	0x0088, r24
 1d8:	8c e0       	ldi	r24, 0x0C	; 12
 1da:	80 93 81 00 	sts	0x0081, r24
 1de:	82 e0       	ldi	r24, 0x02	; 2
 1e0:	80 93 6f 00 	sts	0x006F, r24
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <SCH_Start>:
 1e8:	78 94       	sei
 1ea:	08 95       	ret

000001ec <__vector_11>:
 1ec:	1f 92       	push	r1
 1ee:	0f 92       	push	r0
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	0f 92       	push	r0
 1f4:	11 24       	eor	r1, r1
 1f6:	2f 93       	push	r18
 1f8:	3f 93       	push	r19
 1fa:	8f 93       	push	r24
 1fc:	9f 93       	push	r25
 1fe:	af 93       	push	r26
 200:	bf 93       	push	r27
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	ef 93       	push	r30
 208:	ff 93       	push	r31
 20a:	e5 e0       	ldi	r30, 0x05	; 5
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	df 01       	movw	r26, r30
 210:	16 96       	adiw	r26, 0x06	; 6
 212:	9f 01       	movw	r18, r30
 214:	2d 5d       	subi	r18, 0xDD	; 221
 216:	3f 4f       	sbci	r19, 0xFF	; 255
 218:	80 81       	ld	r24, Z
 21a:	91 81       	ldd	r25, Z+1	; 0x01
 21c:	00 97       	sbiw	r24, 0x00	; 0
 21e:	91 f0       	breq	.+36     	; 0x244 <__vector_11+0x58>
 220:	82 81       	ldd	r24, Z+2	; 0x02
 222:	93 81       	ldd	r25, Z+3	; 0x03
 224:	00 97       	sbiw	r24, 0x00	; 0
 226:	59 f4       	brne	.+22     	; 0x23e <__vector_11+0x52>
 228:	8c 91       	ld	r24, X
 22a:	8f 5f       	subi	r24, 0xFF	; 255
 22c:	8c 93       	st	X, r24
 22e:	84 81       	ldd	r24, Z+4	; 0x04
 230:	95 81       	ldd	r25, Z+5	; 0x05
 232:	00 97       	sbiw	r24, 0x00	; 0
 234:	39 f0       	breq	.+14     	; 0x244 <__vector_11+0x58>
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	93 83       	std	Z+3, r25	; 0x03
 23a:	82 83       	std	Z+2, r24	; 0x02
 23c:	03 c0       	rjmp	.+6      	; 0x244 <__vector_11+0x58>
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	93 83       	std	Z+3, r25	; 0x03
 242:	82 83       	std	Z+2, r24	; 0x02
 244:	37 96       	adiw	r30, 0x07	; 7
 246:	17 96       	adiw	r26, 0x07	; 7
 248:	e2 17       	cp	r30, r18
 24a:	f3 07       	cpc	r31, r19
 24c:	29 f7       	brne	.-54     	; 0x218 <__vector_11+0x2c>
 24e:	ff 91       	pop	r31
 250:	ef 91       	pop	r30
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	bf 91       	pop	r27
 258:	af 91       	pop	r26
 25a:	9f 91       	pop	r25
 25c:	8f 91       	pop	r24
 25e:	3f 91       	pop	r19
 260:	2f 91       	pop	r18
 262:	0f 90       	pop	r0
 264:	0f be       	out	0x3f, r0	; 63
 266:	0f 90       	pop	r0
 268:	1f 90       	pop	r1
 26a:	18 95       	reti

0000026c <uart_init>:


//serialisering
void uart_init() {
	// set the baud rate
	UBRR0H = 19200;
 26c:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBBRVAL;
 270:	83 e3       	ldi	r24, 0x33	; 51
 272:	80 93 c4 00 	sts	0x00C4, r24
	// disable U2X mode
	UCSR0A = 0;
 276:	10 92 c0 00 	sts	0x00C0, r1
	// enable transmitter and receiver
	UCSR0B = _BV(TXEN0)|_BV(RXEN0);
 27a:	88 e1       	ldi	r24, 0x18	; 24
 27c:	80 93 c1 00 	sts	0x00C1, r24
	// set frame format : asynchronous, 8 data bits, 1 stop bit, no parity
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	80 93 c2 00 	sts	0x00C2, r24
}
 286:	08 95       	ret

00000288 <transmit>:
//transmitten naar Realterm/Putty/Centrale
void transmit(uint8_t data)
{
	// wait for an empty transmit buffer
	// UDRE is set when transmit buffer is empty
	loop_until_bit_is_set(UCSR0A, UDRE0);
 288:	e0 ec       	ldi	r30, 0xC0	; 192
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	90 81       	ld	r25, Z
 28e:	95 ff       	sbrs	r25, 5
 290:	fd cf       	rjmp	.-6      	; 0x28c <transmit+0x4>
	// send the data
	UDR0 = data;
 292:	80 93 c6 00 	sts	0x00C6, r24
}
 296:	08 95       	ret

00000298 <ADCsingleREAD>:
//AnalogRead
int ADCsingleREAD(uint8_t adctouse)
{
	int ADCval;

	ADMUX = adctouse;         // use #1 ADC
 298:	ec e7       	ldi	r30, 0x7C	; 124
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 83       	st	Z, r24
	ADMUX |= (1 << REFS0);    // use AVcc as the reference
 29e:	80 81       	ld	r24, Z
 2a0:	80 64       	ori	r24, 0x40	; 64
 2a2:	80 83       	st	Z, r24
	ADMUX &= ~(1 << ADLAR);   // clear for 10 bit resolution
 2a4:	80 81       	ld	r24, Z
 2a6:	8f 7d       	andi	r24, 0xDF	; 223
 2a8:	80 83       	st	Z, r24

	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);    // 128 prescale for 8Mhz
 2aa:	ea e7       	ldi	r30, 0x7A	; 122
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	87 60       	ori	r24, 0x07	; 7
 2b2:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);    // Enable the ADC
 2b4:	80 81       	ld	r24, Z
 2b6:	80 68       	ori	r24, 0x80	; 128
 2b8:	80 83       	st	Z, r24

	ADCSRA |= (1 << ADSC);    // Start the ADC conversion
 2ba:	80 81       	ld	r24, Z
 2bc:	80 64       	ori	r24, 0x40	; 64
 2be:	80 83       	st	Z, r24

	while(ADCSRA & (1 << ADSC));      // Thanks T, this line waits for the ADC to finish
 2c0:	80 81       	ld	r24, Z
 2c2:	86 fd       	sbrc	r24, 6
 2c4:	fd cf       	rjmp	.-6      	; 0x2c0 <ADCsingleREAD+0x28>


	ADCval = ADCL;
 2c6:	20 91 78 00 	lds	r18, 0x0078
		ADCval = (ADCH << 8) + ADCval;    // ADCH is read so ADC can be updated again
 2ca:	30 91 79 00 	lds	r19, 0x0079
 2ce:	93 2f       	mov	r25, r19
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	82 0f       	add	r24, r18
 2d4:	91 1d       	adc	r25, r1

	return ADCval;
}
 2d6:	08 95       	ret

000002d8 <readLDR>:
}
//lichtsensor
int readLDR()
{
	int ADCvalue;	//int variabele ADCValue aanmaken
	ADCvalue = ADCsingleREAD(1);	//Lees de ADC uit voor pin 1 en sla deze op in ADCValue
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	0e 94 4c 01 	call	0x298	; 0x298 <ADCsingleREAD>
	transmit(ADCvalue);	//Verstuur de ADCValue via seriele verbinding. N.B.: Hier moet wellicht nog een berekening om juiste waarden te versturen???
 2de:	0e 94 44 01 	call	0x288	; 0x288 <transmit>
}
 2e2:	08 95       	ret

000002e4 <readTemp>:
}
//Temp sensor
int readTemp()
{
	int ADCvalue;	//int variabele ADCValue aanmaken
	ADCvalue = ADCsingleREAD(0);	//Lees de ADC uit voor pin 0 en sla deze op in ADCValue
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	0e 94 4c 01 	call	0x298	; 0x298 <ADCsingleREAD>
    float temperatuur = 0.00;	//Float variabele aanmaken voor het berekenen van- en opslaan van temperatuur
	temperatuur = ((ADCvalue * (5000.0/1024.0)) - 500.0) /10.0;	//Temperatuur berekenen uit ADCValue
 2ea:	9c 01       	movw	r18, r24
 2ec:	b9 01       	movw	r22, r18
 2ee:	88 27       	eor	r24, r24
 2f0:	77 fd       	sbrc	r23, 7
 2f2:	80 95       	com	r24
 2f4:	98 2f       	mov	r25, r24
 2f6:	0e 94 af 02 	call	0x55e	; 0x55e <__floatsisf>
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	30 e4       	ldi	r19, 0x40	; 64
 2fe:	4c e9       	ldi	r20, 0x9C	; 156
 300:	50 e4       	ldi	r21, 0x40	; 64
 302:	0e 94 3b 03 	call	0x676	; 0x676 <__mulsf3>
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	4a ef       	ldi	r20, 0xFA	; 250
 30c:	53 e4       	ldi	r21, 0x43	; 67
 30e:	0e 94 b4 01 	call	0x368	; 0x368 <__subsf3>
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	40 e2       	ldi	r20, 0x20	; 32
 318:	51 e4       	ldi	r21, 0x41	; 65
 31a:	0e 94 19 02 	call	0x432	; 0x432 <__divsf3>
	transmit(temperatuur);	//Verstuur de temperatuur via seriele verbinding.
 31e:	0e 94 81 02 	call	0x502	; 0x502 <__fixunssfsi>
 322:	86 2f       	mov	r24, r22
 324:	0e 94 44 01 	call	0x288	; 0x288 <transmit>
}
 328:	08 95       	ret

0000032a <main>:
}
*/
int main() {

	//Poort init
	DDRB = 0xfe;
 32a:	8e ef       	ldi	r24, 0xFE	; 254
 32c:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xff;
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	8a b9       	out	0x0a, r24	; 10

	//PCINT0 init
	PCICR |= (1 << PCIE0);
 332:	e8 e6       	ldi	r30, 0x68	; 104
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	81 60       	ori	r24, 0x01	; 1
 33a:	80 83       	st	Z, r24
	PCMSK0 |= (1<< PCINT0);
 33c:	eb e6       	ldi	r30, 0x6B	; 107
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	81 60       	ori	r24, 0x01	; 1
 344:	80 83       	st	Z, r24

	uart_init();//init serialisering
 346:	0e 94 36 01 	call	0x26c	; 0x26c <uart_init>

	//scheduler
	SCH_Init_T1();
 34a:	0e 94 de 00 	call	0x1bc	; 0x1bc <SCH_Init_T1>
	//SCH_Add_Task(readTemp,0,300);
	SCH_Add_Task(readLDR,100,300);
 34e:	8c e6       	ldi	r24, 0x6C	; 108
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	64 e6       	ldi	r22, 0x64	; 100
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	4c e2       	ldi	r20, 0x2C	; 44
 358:	51 e0       	ldi	r21, 0x01	; 1
 35a:	0e 94 53 00 	call	0xa6	; 0xa6 <SCH_Add_Task>
	//SCH_Add_Task(SR04Signal,0,50);
	SCH_Start();
 35e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <SCH_Start>

	//run scheduler
	while(1) {
		SCH_Dispatch_Tasks();
 362:	0e 94 a7 00 	call	0x14e	; 0x14e <SCH_Dispatch_Tasks>
 366:	fd cf       	rjmp	.-6      	; 0x362 <main+0x38>

00000368 <__subsf3>:
 368:	50 58       	subi	r21, 0x80	; 128

0000036a <__addsf3>:
 36a:	bb 27       	eor	r27, r27
 36c:	aa 27       	eor	r26, r26
 36e:	0e d0       	rcall	.+28     	; 0x38c <__addsf3x>
 370:	48 c1       	rjmp	.+656    	; 0x602 <__fp_round>
 372:	39 d1       	rcall	.+626    	; 0x5e6 <__fp_pscA>
 374:	30 f0       	brcs	.+12     	; 0x382 <__addsf3+0x18>
 376:	3e d1       	rcall	.+636    	; 0x5f4 <__fp_pscB>
 378:	20 f0       	brcs	.+8      	; 0x382 <__addsf3+0x18>
 37a:	31 f4       	brne	.+12     	; 0x388 <__addsf3+0x1e>
 37c:	9f 3f       	cpi	r25, 0xFF	; 255
 37e:	11 f4       	brne	.+4      	; 0x384 <__addsf3+0x1a>
 380:	1e f4       	brtc	.+6      	; 0x388 <__addsf3+0x1e>
 382:	2e c1       	rjmp	.+604    	; 0x5e0 <__fp_nan>
 384:	0e f4       	brtc	.+2      	; 0x388 <__addsf3+0x1e>
 386:	e0 95       	com	r30
 388:	e7 fb       	bst	r30, 7
 38a:	24 c1       	rjmp	.+584    	; 0x5d4 <__fp_inf>

0000038c <__addsf3x>:
 38c:	e9 2f       	mov	r30, r25
 38e:	4a d1       	rcall	.+660    	; 0x624 <__fp_split3>
 390:	80 f3       	brcs	.-32     	; 0x372 <__addsf3+0x8>
 392:	ba 17       	cp	r27, r26
 394:	62 07       	cpc	r22, r18
 396:	73 07       	cpc	r23, r19
 398:	84 07       	cpc	r24, r20
 39a:	95 07       	cpc	r25, r21
 39c:	18 f0       	brcs	.+6      	; 0x3a4 <__addsf3x+0x18>
 39e:	71 f4       	brne	.+28     	; 0x3bc <__addsf3x+0x30>
 3a0:	9e f5       	brtc	.+102    	; 0x408 <__addsf3x+0x7c>
 3a2:	62 c1       	rjmp	.+708    	; 0x668 <__fp_zero>
 3a4:	0e f4       	brtc	.+2      	; 0x3a8 <__addsf3x+0x1c>
 3a6:	e0 95       	com	r30
 3a8:	0b 2e       	mov	r0, r27
 3aa:	ba 2f       	mov	r27, r26
 3ac:	a0 2d       	mov	r26, r0
 3ae:	0b 01       	movw	r0, r22
 3b0:	b9 01       	movw	r22, r18
 3b2:	90 01       	movw	r18, r0
 3b4:	0c 01       	movw	r0, r24
 3b6:	ca 01       	movw	r24, r20
 3b8:	a0 01       	movw	r20, r0
 3ba:	11 24       	eor	r1, r1
 3bc:	ff 27       	eor	r31, r31
 3be:	59 1b       	sub	r21, r25
 3c0:	99 f0       	breq	.+38     	; 0x3e8 <__addsf3x+0x5c>
 3c2:	59 3f       	cpi	r21, 0xF9	; 249
 3c4:	50 f4       	brcc	.+20     	; 0x3da <__addsf3x+0x4e>
 3c6:	50 3e       	cpi	r21, 0xE0	; 224
 3c8:	68 f1       	brcs	.+90     	; 0x424 <__addsf3x+0x98>
 3ca:	1a 16       	cp	r1, r26
 3cc:	f0 40       	sbci	r31, 0x00	; 0
 3ce:	a2 2f       	mov	r26, r18
 3d0:	23 2f       	mov	r18, r19
 3d2:	34 2f       	mov	r19, r20
 3d4:	44 27       	eor	r20, r20
 3d6:	58 5f       	subi	r21, 0xF8	; 248
 3d8:	f3 cf       	rjmp	.-26     	; 0x3c0 <__addsf3x+0x34>
 3da:	46 95       	lsr	r20
 3dc:	37 95       	ror	r19
 3de:	27 95       	ror	r18
 3e0:	a7 95       	ror	r26
 3e2:	f0 40       	sbci	r31, 0x00	; 0
 3e4:	53 95       	inc	r21
 3e6:	c9 f7       	brne	.-14     	; 0x3da <__addsf3x+0x4e>
 3e8:	7e f4       	brtc	.+30     	; 0x408 <__addsf3x+0x7c>
 3ea:	1f 16       	cp	r1, r31
 3ec:	ba 0b       	sbc	r27, r26
 3ee:	62 0b       	sbc	r22, r18
 3f0:	73 0b       	sbc	r23, r19
 3f2:	84 0b       	sbc	r24, r20
 3f4:	ba f0       	brmi	.+46     	; 0x424 <__addsf3x+0x98>
 3f6:	91 50       	subi	r25, 0x01	; 1
 3f8:	a1 f0       	breq	.+40     	; 0x422 <__addsf3x+0x96>
 3fa:	ff 0f       	add	r31, r31
 3fc:	bb 1f       	adc	r27, r27
 3fe:	66 1f       	adc	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	c2 f7       	brpl	.-16     	; 0x3f6 <__addsf3x+0x6a>
 406:	0e c0       	rjmp	.+28     	; 0x424 <__addsf3x+0x98>
 408:	ba 0f       	add	r27, r26
 40a:	62 1f       	adc	r22, r18
 40c:	73 1f       	adc	r23, r19
 40e:	84 1f       	adc	r24, r20
 410:	48 f4       	brcc	.+18     	; 0x424 <__addsf3x+0x98>
 412:	87 95       	ror	r24
 414:	77 95       	ror	r23
 416:	67 95       	ror	r22
 418:	b7 95       	ror	r27
 41a:	f7 95       	ror	r31
 41c:	9e 3f       	cpi	r25, 0xFE	; 254
 41e:	08 f0       	brcs	.+2      	; 0x422 <__addsf3x+0x96>
 420:	b3 cf       	rjmp	.-154    	; 0x388 <__addsf3+0x1e>
 422:	93 95       	inc	r25
 424:	88 0f       	add	r24, r24
 426:	08 f0       	brcs	.+2      	; 0x42a <__addsf3x+0x9e>
 428:	99 27       	eor	r25, r25
 42a:	ee 0f       	add	r30, r30
 42c:	97 95       	ror	r25
 42e:	87 95       	ror	r24
 430:	08 95       	ret

00000432 <__divsf3>:
 432:	0c d0       	rcall	.+24     	; 0x44c <__divsf3x>
 434:	e6 c0       	rjmp	.+460    	; 0x602 <__fp_round>
 436:	de d0       	rcall	.+444    	; 0x5f4 <__fp_pscB>
 438:	40 f0       	brcs	.+16     	; 0x44a <__divsf3+0x18>
 43a:	d5 d0       	rcall	.+426    	; 0x5e6 <__fp_pscA>
 43c:	30 f0       	brcs	.+12     	; 0x44a <__divsf3+0x18>
 43e:	21 f4       	brne	.+8      	; 0x448 <__divsf3+0x16>
 440:	5f 3f       	cpi	r21, 0xFF	; 255
 442:	19 f0       	breq	.+6      	; 0x44a <__divsf3+0x18>
 444:	c7 c0       	rjmp	.+398    	; 0x5d4 <__fp_inf>
 446:	51 11       	cpse	r21, r1
 448:	10 c1       	rjmp	.+544    	; 0x66a <__fp_szero>
 44a:	ca c0       	rjmp	.+404    	; 0x5e0 <__fp_nan>

0000044c <__divsf3x>:
 44c:	eb d0       	rcall	.+470    	; 0x624 <__fp_split3>
 44e:	98 f3       	brcs	.-26     	; 0x436 <__divsf3+0x4>

00000450 <__divsf3_pse>:
 450:	99 23       	and	r25, r25
 452:	c9 f3       	breq	.-14     	; 0x446 <__divsf3+0x14>
 454:	55 23       	and	r21, r21
 456:	b1 f3       	breq	.-20     	; 0x444 <__divsf3+0x12>
 458:	95 1b       	sub	r25, r21
 45a:	55 0b       	sbc	r21, r21
 45c:	bb 27       	eor	r27, r27
 45e:	aa 27       	eor	r26, r26
 460:	62 17       	cp	r22, r18
 462:	73 07       	cpc	r23, r19
 464:	84 07       	cpc	r24, r20
 466:	38 f0       	brcs	.+14     	; 0x476 <__divsf3_pse+0x26>
 468:	9f 5f       	subi	r25, 0xFF	; 255
 46a:	5f 4f       	sbci	r21, 0xFF	; 255
 46c:	22 0f       	add	r18, r18
 46e:	33 1f       	adc	r19, r19
 470:	44 1f       	adc	r20, r20
 472:	aa 1f       	adc	r26, r26
 474:	a9 f3       	breq	.-22     	; 0x460 <__divsf3_pse+0x10>
 476:	33 d0       	rcall	.+102    	; 0x4de <__divsf3_pse+0x8e>
 478:	0e 2e       	mov	r0, r30
 47a:	3a f0       	brmi	.+14     	; 0x48a <__divsf3_pse+0x3a>
 47c:	e0 e8       	ldi	r30, 0x80	; 128
 47e:	30 d0       	rcall	.+96     	; 0x4e0 <__divsf3_pse+0x90>
 480:	91 50       	subi	r25, 0x01	; 1
 482:	50 40       	sbci	r21, 0x00	; 0
 484:	e6 95       	lsr	r30
 486:	00 1c       	adc	r0, r0
 488:	ca f7       	brpl	.-14     	; 0x47c <__divsf3_pse+0x2c>
 48a:	29 d0       	rcall	.+82     	; 0x4de <__divsf3_pse+0x8e>
 48c:	fe 2f       	mov	r31, r30
 48e:	27 d0       	rcall	.+78     	; 0x4de <__divsf3_pse+0x8e>
 490:	66 0f       	add	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	bb 1f       	adc	r27, r27
 498:	26 17       	cp	r18, r22
 49a:	37 07       	cpc	r19, r23
 49c:	48 07       	cpc	r20, r24
 49e:	ab 07       	cpc	r26, r27
 4a0:	b0 e8       	ldi	r27, 0x80	; 128
 4a2:	09 f0       	breq	.+2      	; 0x4a6 <__divsf3_pse+0x56>
 4a4:	bb 0b       	sbc	r27, r27
 4a6:	80 2d       	mov	r24, r0
 4a8:	bf 01       	movw	r22, r30
 4aa:	ff 27       	eor	r31, r31
 4ac:	93 58       	subi	r25, 0x83	; 131
 4ae:	5f 4f       	sbci	r21, 0xFF	; 255
 4b0:	2a f0       	brmi	.+10     	; 0x4bc <__divsf3_pse+0x6c>
 4b2:	9e 3f       	cpi	r25, 0xFE	; 254
 4b4:	51 05       	cpc	r21, r1
 4b6:	68 f0       	brcs	.+26     	; 0x4d2 <__divsf3_pse+0x82>
 4b8:	8d c0       	rjmp	.+282    	; 0x5d4 <__fp_inf>
 4ba:	d7 c0       	rjmp	.+430    	; 0x66a <__fp_szero>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	ec f3       	brlt	.-6      	; 0x4ba <__divsf3_pse+0x6a>
 4c0:	98 3e       	cpi	r25, 0xE8	; 232
 4c2:	dc f3       	brlt	.-10     	; 0x4ba <__divsf3_pse+0x6a>
 4c4:	86 95       	lsr	r24
 4c6:	77 95       	ror	r23
 4c8:	67 95       	ror	r22
 4ca:	b7 95       	ror	r27
 4cc:	f7 95       	ror	r31
 4ce:	9f 5f       	subi	r25, 0xFF	; 255
 4d0:	c9 f7       	brne	.-14     	; 0x4c4 <__divsf3_pse+0x74>
 4d2:	88 0f       	add	r24, r24
 4d4:	91 1d       	adc	r25, r1
 4d6:	96 95       	lsr	r25
 4d8:	87 95       	ror	r24
 4da:	97 f9       	bld	r25, 7
 4dc:	08 95       	ret
 4de:	e1 e0       	ldi	r30, 0x01	; 1
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	bb 1f       	adc	r27, r27
 4e8:	62 17       	cp	r22, r18
 4ea:	73 07       	cpc	r23, r19
 4ec:	84 07       	cpc	r24, r20
 4ee:	ba 07       	cpc	r27, r26
 4f0:	20 f0       	brcs	.+8      	; 0x4fa <__divsf3_pse+0xaa>
 4f2:	62 1b       	sub	r22, r18
 4f4:	73 0b       	sbc	r23, r19
 4f6:	84 0b       	sbc	r24, r20
 4f8:	ba 0b       	sbc	r27, r26
 4fa:	ee 1f       	adc	r30, r30
 4fc:	88 f7       	brcc	.-30     	; 0x4e0 <__divsf3_pse+0x90>
 4fe:	e0 95       	com	r30
 500:	08 95       	ret

00000502 <__fixunssfsi>:
 502:	98 d0       	rcall	.+304    	; 0x634 <__fp_splitA>
 504:	88 f0       	brcs	.+34     	; 0x528 <__fixunssfsi+0x26>
 506:	9f 57       	subi	r25, 0x7F	; 127
 508:	90 f0       	brcs	.+36     	; 0x52e <__fixunssfsi+0x2c>
 50a:	b9 2f       	mov	r27, r25
 50c:	99 27       	eor	r25, r25
 50e:	b7 51       	subi	r27, 0x17	; 23
 510:	a0 f0       	brcs	.+40     	; 0x53a <__fixunssfsi+0x38>
 512:	d1 f0       	breq	.+52     	; 0x548 <__fixunssfsi+0x46>
 514:	66 0f       	add	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	1a f0       	brmi	.+6      	; 0x524 <__fixunssfsi+0x22>
 51e:	ba 95       	dec	r27
 520:	c9 f7       	brne	.-14     	; 0x514 <__fixunssfsi+0x12>
 522:	12 c0       	rjmp	.+36     	; 0x548 <__fixunssfsi+0x46>
 524:	b1 30       	cpi	r27, 0x01	; 1
 526:	81 f0       	breq	.+32     	; 0x548 <__fixunssfsi+0x46>
 528:	9f d0       	rcall	.+318    	; 0x668 <__fp_zero>
 52a:	b1 e0       	ldi	r27, 0x01	; 1
 52c:	08 95       	ret
 52e:	9c c0       	rjmp	.+312    	; 0x668 <__fp_zero>
 530:	67 2f       	mov	r22, r23
 532:	78 2f       	mov	r23, r24
 534:	88 27       	eor	r24, r24
 536:	b8 5f       	subi	r27, 0xF8	; 248
 538:	39 f0       	breq	.+14     	; 0x548 <__fixunssfsi+0x46>
 53a:	b9 3f       	cpi	r27, 0xF9	; 249
 53c:	cc f3       	brlt	.-14     	; 0x530 <__fixunssfsi+0x2e>
 53e:	86 95       	lsr	r24
 540:	77 95       	ror	r23
 542:	67 95       	ror	r22
 544:	b3 95       	inc	r27
 546:	d9 f7       	brne	.-10     	; 0x53e <__fixunssfsi+0x3c>
 548:	3e f4       	brtc	.+14     	; 0x558 <__fixunssfsi+0x56>
 54a:	90 95       	com	r25
 54c:	80 95       	com	r24
 54e:	70 95       	com	r23
 550:	61 95       	neg	r22
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	08 95       	ret

0000055a <__floatunsisf>:
 55a:	e8 94       	clt
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__floatsisf+0x12>

0000055e <__floatsisf>:
 55e:	97 fb       	bst	r25, 7
 560:	3e f4       	brtc	.+14     	; 0x570 <__floatsisf+0x12>
 562:	90 95       	com	r25
 564:	80 95       	com	r24
 566:	70 95       	com	r23
 568:	61 95       	neg	r22
 56a:	7f 4f       	sbci	r23, 0xFF	; 255
 56c:	8f 4f       	sbci	r24, 0xFF	; 255
 56e:	9f 4f       	sbci	r25, 0xFF	; 255
 570:	99 23       	and	r25, r25
 572:	a9 f0       	breq	.+42     	; 0x59e <__floatsisf+0x40>
 574:	f9 2f       	mov	r31, r25
 576:	96 e9       	ldi	r25, 0x96	; 150
 578:	bb 27       	eor	r27, r27
 57a:	93 95       	inc	r25
 57c:	f6 95       	lsr	r31
 57e:	87 95       	ror	r24
 580:	77 95       	ror	r23
 582:	67 95       	ror	r22
 584:	b7 95       	ror	r27
 586:	f1 11       	cpse	r31, r1
 588:	f8 cf       	rjmp	.-16     	; 0x57a <__floatsisf+0x1c>
 58a:	fa f4       	brpl	.+62     	; 0x5ca <__floatsisf+0x6c>
 58c:	bb 0f       	add	r27, r27
 58e:	11 f4       	brne	.+4      	; 0x594 <__floatsisf+0x36>
 590:	60 ff       	sbrs	r22, 0
 592:	1b c0       	rjmp	.+54     	; 0x5ca <__floatsisf+0x6c>
 594:	6f 5f       	subi	r22, 0xFF	; 255
 596:	7f 4f       	sbci	r23, 0xFF	; 255
 598:	8f 4f       	sbci	r24, 0xFF	; 255
 59a:	9f 4f       	sbci	r25, 0xFF	; 255
 59c:	16 c0       	rjmp	.+44     	; 0x5ca <__floatsisf+0x6c>
 59e:	88 23       	and	r24, r24
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <__floatsisf+0x48>
 5a2:	96 e9       	ldi	r25, 0x96	; 150
 5a4:	11 c0       	rjmp	.+34     	; 0x5c8 <__floatsisf+0x6a>
 5a6:	77 23       	and	r23, r23
 5a8:	21 f0       	breq	.+8      	; 0x5b2 <__floatsisf+0x54>
 5aa:	9e e8       	ldi	r25, 0x8E	; 142
 5ac:	87 2f       	mov	r24, r23
 5ae:	76 2f       	mov	r23, r22
 5b0:	05 c0       	rjmp	.+10     	; 0x5bc <__floatsisf+0x5e>
 5b2:	66 23       	and	r22, r22
 5b4:	71 f0       	breq	.+28     	; 0x5d2 <__floatsisf+0x74>
 5b6:	96 e8       	ldi	r25, 0x86	; 134
 5b8:	86 2f       	mov	r24, r22
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	60 e0       	ldi	r22, 0x00	; 0
 5be:	2a f0       	brmi	.+10     	; 0x5ca <__floatsisf+0x6c>
 5c0:	9a 95       	dec	r25
 5c2:	66 0f       	add	r22, r22
 5c4:	77 1f       	adc	r23, r23
 5c6:	88 1f       	adc	r24, r24
 5c8:	da f7       	brpl	.-10     	; 0x5c0 <__floatsisf+0x62>
 5ca:	88 0f       	add	r24, r24
 5cc:	96 95       	lsr	r25
 5ce:	87 95       	ror	r24
 5d0:	97 f9       	bld	r25, 7
 5d2:	08 95       	ret

000005d4 <__fp_inf>:
 5d4:	97 f9       	bld	r25, 7
 5d6:	9f 67       	ori	r25, 0x7F	; 127
 5d8:	80 e8       	ldi	r24, 0x80	; 128
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	08 95       	ret

000005e0 <__fp_nan>:
 5e0:	9f ef       	ldi	r25, 0xFF	; 255
 5e2:	80 ec       	ldi	r24, 0xC0	; 192
 5e4:	08 95       	ret

000005e6 <__fp_pscA>:
 5e6:	00 24       	eor	r0, r0
 5e8:	0a 94       	dec	r0
 5ea:	16 16       	cp	r1, r22
 5ec:	17 06       	cpc	r1, r23
 5ee:	18 06       	cpc	r1, r24
 5f0:	09 06       	cpc	r0, r25
 5f2:	08 95       	ret

000005f4 <__fp_pscB>:
 5f4:	00 24       	eor	r0, r0
 5f6:	0a 94       	dec	r0
 5f8:	12 16       	cp	r1, r18
 5fa:	13 06       	cpc	r1, r19
 5fc:	14 06       	cpc	r1, r20
 5fe:	05 06       	cpc	r0, r21
 600:	08 95       	ret

00000602 <__fp_round>:
 602:	09 2e       	mov	r0, r25
 604:	03 94       	inc	r0
 606:	00 0c       	add	r0, r0
 608:	11 f4       	brne	.+4      	; 0x60e <__fp_round+0xc>
 60a:	88 23       	and	r24, r24
 60c:	52 f0       	brmi	.+20     	; 0x622 <__fp_round+0x20>
 60e:	bb 0f       	add	r27, r27
 610:	40 f4       	brcc	.+16     	; 0x622 <__fp_round+0x20>
 612:	bf 2b       	or	r27, r31
 614:	11 f4       	brne	.+4      	; 0x61a <__fp_round+0x18>
 616:	60 ff       	sbrs	r22, 0
 618:	04 c0       	rjmp	.+8      	; 0x622 <__fp_round+0x20>
 61a:	6f 5f       	subi	r22, 0xFF	; 255
 61c:	7f 4f       	sbci	r23, 0xFF	; 255
 61e:	8f 4f       	sbci	r24, 0xFF	; 255
 620:	9f 4f       	sbci	r25, 0xFF	; 255
 622:	08 95       	ret

00000624 <__fp_split3>:
 624:	57 fd       	sbrc	r21, 7
 626:	90 58       	subi	r25, 0x80	; 128
 628:	44 0f       	add	r20, r20
 62a:	55 1f       	adc	r21, r21
 62c:	59 f0       	breq	.+22     	; 0x644 <__fp_splitA+0x10>
 62e:	5f 3f       	cpi	r21, 0xFF	; 255
 630:	71 f0       	breq	.+28     	; 0x64e <__fp_splitA+0x1a>
 632:	47 95       	ror	r20

00000634 <__fp_splitA>:
 634:	88 0f       	add	r24, r24
 636:	97 fb       	bst	r25, 7
 638:	99 1f       	adc	r25, r25
 63a:	61 f0       	breq	.+24     	; 0x654 <__fp_splitA+0x20>
 63c:	9f 3f       	cpi	r25, 0xFF	; 255
 63e:	79 f0       	breq	.+30     	; 0x65e <__fp_splitA+0x2a>
 640:	87 95       	ror	r24
 642:	08 95       	ret
 644:	12 16       	cp	r1, r18
 646:	13 06       	cpc	r1, r19
 648:	14 06       	cpc	r1, r20
 64a:	55 1f       	adc	r21, r21
 64c:	f2 cf       	rjmp	.-28     	; 0x632 <__fp_split3+0xe>
 64e:	46 95       	lsr	r20
 650:	f1 df       	rcall	.-30     	; 0x634 <__fp_splitA>
 652:	08 c0       	rjmp	.+16     	; 0x664 <__fp_splitA+0x30>
 654:	16 16       	cp	r1, r22
 656:	17 06       	cpc	r1, r23
 658:	18 06       	cpc	r1, r24
 65a:	99 1f       	adc	r25, r25
 65c:	f1 cf       	rjmp	.-30     	; 0x640 <__fp_splitA+0xc>
 65e:	86 95       	lsr	r24
 660:	71 05       	cpc	r23, r1
 662:	61 05       	cpc	r22, r1
 664:	08 94       	sec
 666:	08 95       	ret

00000668 <__fp_zero>:
 668:	e8 94       	clt

0000066a <__fp_szero>:
 66a:	bb 27       	eor	r27, r27
 66c:	66 27       	eor	r22, r22
 66e:	77 27       	eor	r23, r23
 670:	cb 01       	movw	r24, r22
 672:	97 f9       	bld	r25, 7
 674:	08 95       	ret

00000676 <__mulsf3>:
 676:	0b d0       	rcall	.+22     	; 0x68e <__mulsf3x>
 678:	c4 cf       	rjmp	.-120    	; 0x602 <__fp_round>
 67a:	b5 df       	rcall	.-150    	; 0x5e6 <__fp_pscA>
 67c:	28 f0       	brcs	.+10     	; 0x688 <__mulsf3+0x12>
 67e:	ba df       	rcall	.-140    	; 0x5f4 <__fp_pscB>
 680:	18 f0       	brcs	.+6      	; 0x688 <__mulsf3+0x12>
 682:	95 23       	and	r25, r21
 684:	09 f0       	breq	.+2      	; 0x688 <__mulsf3+0x12>
 686:	a6 cf       	rjmp	.-180    	; 0x5d4 <__fp_inf>
 688:	ab cf       	rjmp	.-170    	; 0x5e0 <__fp_nan>
 68a:	11 24       	eor	r1, r1
 68c:	ee cf       	rjmp	.-36     	; 0x66a <__fp_szero>

0000068e <__mulsf3x>:
 68e:	ca df       	rcall	.-108    	; 0x624 <__fp_split3>
 690:	a0 f3       	brcs	.-24     	; 0x67a <__mulsf3+0x4>

00000692 <__mulsf3_pse>:
 692:	95 9f       	mul	r25, r21
 694:	d1 f3       	breq	.-12     	; 0x68a <__mulsf3+0x14>
 696:	95 0f       	add	r25, r21
 698:	50 e0       	ldi	r21, 0x00	; 0
 69a:	55 1f       	adc	r21, r21
 69c:	62 9f       	mul	r22, r18
 69e:	f0 01       	movw	r30, r0
 6a0:	72 9f       	mul	r23, r18
 6a2:	bb 27       	eor	r27, r27
 6a4:	f0 0d       	add	r31, r0
 6a6:	b1 1d       	adc	r27, r1
 6a8:	63 9f       	mul	r22, r19
 6aa:	aa 27       	eor	r26, r26
 6ac:	f0 0d       	add	r31, r0
 6ae:	b1 1d       	adc	r27, r1
 6b0:	aa 1f       	adc	r26, r26
 6b2:	64 9f       	mul	r22, r20
 6b4:	66 27       	eor	r22, r22
 6b6:	b0 0d       	add	r27, r0
 6b8:	a1 1d       	adc	r26, r1
 6ba:	66 1f       	adc	r22, r22
 6bc:	82 9f       	mul	r24, r18
 6be:	22 27       	eor	r18, r18
 6c0:	b0 0d       	add	r27, r0
 6c2:	a1 1d       	adc	r26, r1
 6c4:	62 1f       	adc	r22, r18
 6c6:	73 9f       	mul	r23, r19
 6c8:	b0 0d       	add	r27, r0
 6ca:	a1 1d       	adc	r26, r1
 6cc:	62 1f       	adc	r22, r18
 6ce:	83 9f       	mul	r24, r19
 6d0:	a0 0d       	add	r26, r0
 6d2:	61 1d       	adc	r22, r1
 6d4:	22 1f       	adc	r18, r18
 6d6:	74 9f       	mul	r23, r20
 6d8:	33 27       	eor	r19, r19
 6da:	a0 0d       	add	r26, r0
 6dc:	61 1d       	adc	r22, r1
 6de:	23 1f       	adc	r18, r19
 6e0:	84 9f       	mul	r24, r20
 6e2:	60 0d       	add	r22, r0
 6e4:	21 1d       	adc	r18, r1
 6e6:	82 2f       	mov	r24, r18
 6e8:	76 2f       	mov	r23, r22
 6ea:	6a 2f       	mov	r22, r26
 6ec:	11 24       	eor	r1, r1
 6ee:	9f 57       	subi	r25, 0x7F	; 127
 6f0:	50 40       	sbci	r21, 0x00	; 0
 6f2:	8a f0       	brmi	.+34     	; 0x716 <__mulsf3_pse+0x84>
 6f4:	e1 f0       	breq	.+56     	; 0x72e <__mulsf3_pse+0x9c>
 6f6:	88 23       	and	r24, r24
 6f8:	4a f0       	brmi	.+18     	; 0x70c <__mulsf3_pse+0x7a>
 6fa:	ee 0f       	add	r30, r30
 6fc:	ff 1f       	adc	r31, r31
 6fe:	bb 1f       	adc	r27, r27
 700:	66 1f       	adc	r22, r22
 702:	77 1f       	adc	r23, r23
 704:	88 1f       	adc	r24, r24
 706:	91 50       	subi	r25, 0x01	; 1
 708:	50 40       	sbci	r21, 0x00	; 0
 70a:	a9 f7       	brne	.-22     	; 0x6f6 <__mulsf3_pse+0x64>
 70c:	9e 3f       	cpi	r25, 0xFE	; 254
 70e:	51 05       	cpc	r21, r1
 710:	70 f0       	brcs	.+28     	; 0x72e <__mulsf3_pse+0x9c>
 712:	60 cf       	rjmp	.-320    	; 0x5d4 <__fp_inf>
 714:	aa cf       	rjmp	.-172    	; 0x66a <__fp_szero>
 716:	5f 3f       	cpi	r21, 0xFF	; 255
 718:	ec f3       	brlt	.-6      	; 0x714 <__mulsf3_pse+0x82>
 71a:	98 3e       	cpi	r25, 0xE8	; 232
 71c:	dc f3       	brlt	.-10     	; 0x714 <__mulsf3_pse+0x82>
 71e:	86 95       	lsr	r24
 720:	77 95       	ror	r23
 722:	67 95       	ror	r22
 724:	b7 95       	ror	r27
 726:	f7 95       	ror	r31
 728:	e7 95       	ror	r30
 72a:	9f 5f       	subi	r25, 0xFF	; 255
 72c:	c1 f7       	brne	.-16     	; 0x71e <__mulsf3_pse+0x8c>
 72e:	fe 2b       	or	r31, r30
 730:	88 0f       	add	r24, r24
 732:	91 1d       	adc	r25, r1
 734:	96 95       	lsr	r25
 736:	87 95       	ror	r24
 738:	97 f9       	bld	r25, 7
 73a:	08 95       	ret

0000073c <_exit>:
 73c:	f8 94       	cli

0000073e <__stop_program>:
 73e:	ff cf       	rjmp	.-2      	; 0x73e <__stop_program>
